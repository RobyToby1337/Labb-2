import pandas as pd  # Importerar pandas-biblioteket f칬r att hantera och bearbeta data
import matplotlib.pyplot as plt #Importerar matplotlib f칬r att kunna skapa graferna
import os # hanterar filsystem och mappar
import plotly.express as px  # Skapar interaktiva grafer med Plotly

# L칛ser in Excel-filen som inneh친ller statistik f칬r nationella prov
file_path = "riket2023_친k9_np.xlsx"

# Lista 칬ver 칛mnen som ska l칛sas in
subjects = ["Engelska", "Matematik", "Svenska", "Svenska som andraspr친k"]
dataframes = {}  # Dictionary f칬r att spara varje 칛mnes data

# Loopar genom varje 칛mne och l칛ser in datan
for subject in subjects:
    df = pd.read_excel(file_path, sheet_name=subject, skiprows=6, header=0)

    # S칛tter nya kolumnnamn f칬r att matcha uppgiften och g칬ra tabellen mer l칛sbar
    df.columns = ["Plats", "Huvudman", "Totalt (A-F)", "Flickor (A-F)", "Pojkar (A-F)", 
                  "Totalt (A-E)", "Flickor (A-E)", "Pojkar (A-E)", 
                  "Totalt (po칛ng)", "Flickor (po칛ng)", "Pojkar (po칛ng)"]

    # Tar bort rader som saknar data i kolumnerna Plats och Huvudman
    df = df.dropna(subset=["Plats", "Huvudman"])

    # 칀terst칛ller index efter att rader har tagits bort f칬r att h친lla en ren tabell
    df.reset_index(drop=True, inplace=True)
    dataframes[subject] = df

# Skriver ut de f칬rsta raderna av varje 칛mne
for subject, df in dataframes.items():
    print(f"F칬rhandsgranskning av {subject}:")
    print(df.head())  # Skriver ut de f칬rsta 5 raderna f칬r varje 칛mne

# Loopar genom alla 칛mnen och s칛kerst칛ller att r칛tt datatyper anv칛nds
for subject, df in dataframes.items():
    df["Huvudman"] = df["Huvudman"].astype(str)  # Konvertera Huvudman till text

    for category in ["Totalt (po칛ng)", "Flickor (po칛ng)", "Pojkar (po칛ng)"]:
        df[category] = pd.to_numeric(df[category], errors="coerce")  # Konverterar till numeriskt format

# Skapat en stapelgraf f칬r totala po칛ng per huvudman
# Se till att mappen visualiseringar finns
os.makedirs("visualiseringar", exist_ok=True)

# Skapar en stapelgraf f칬r varje 칛mne
for subject, df in dataframes.items():
    plt.figure(figsize=(8, 5))
    plt.bar(df["Huvudman"], df["Totalt (po칛ng)"], color=['blue', 'green', 'red', 'purple'])

    # L칛gg till etiketter och titel
    plt.xlabel("Huvudman")
    plt.ylabel("Totalt (po칛ng)")
    plt.title(f"Totala po칛ng per huvudman - {subject}")

    # Spara grafen i undermappen visualiseringar
    plt.savefig(f"visualiseringar/totala_po칛ng_{subject}.png")

    # Visa grafen
    plt.show()

    # Skapar en subplot-graf f칬r varje 칛mne
for subject, df in dataframes.items():
    fig, axes = plt.subplots(1, 3, figsize=(15, 5))

    # Lista med kategorier och f칛rger
    categories = ["Totalt (po칛ng)", "Flickor (po칛ng)", "Pojkar (po칛ng)"]
    colors = ["green", "red", "blue"]

    # Loopar igenom kategorierna och ritar upp stapeldiagram
    for i, category in enumerate(categories):
        axes[i].bar(df["Huvudman"], df[category], color=colors[i])  # Stapeldiagram
        axes[i].set_title(f"{category} - {subject}")  # Titel f칬r subplot
        axes[i].set_xlabel("Huvudman")  # X-axel etikett
        axes[i].set_ylabel("Po칛ng")  # Y-axel etikett
        axes[i].tick_params(axis="x", rotation=45)  # Rotera x-etiketter f칬r b칛ttre l칛sbarhet // gpt tips

    # Lagt till en huvudtitel f칬r hela figuren 
    plt.suptitle(f"Po칛ngf칬rdelning per huvudman - {subject}", fontsize=14)

    # Justerat layout s친 att allt ser bra ut
    plt.tight_layout(rect=[0, 0, 1, 0.95])

    # Sparat figuren i visualiseringsmappen
    plt.savefig(f"visualiseringar/po칛ngf칬rdelning_{subject}.png")

    # Visar diagrammet
    plt.show()

    # Filnamn f칬r datasetet
file_path = "betyg_o_prov_riksniv친.xlsx"

    # L칛ser in Tabell 1B fr친n Excel-filen
sheet_name = "Tabell 1B"
df = pd.read_excel(file_path, sheet_name=sheet_name, skiprows=5, header=0)

# 游댌 Debugging - Skriv ut kolumnnamnen f칬r att se vad de faktiskt heter
print("Kolumnnamn i df:")
print(df.columns)

# Rensa osynliga tecken (mellanslag, radbrytningar)
df.columns = df.columns.str.replace("\n", " ", regex=True).str.strip()

# kolumner f칬r andel elever som inte har godk칛nt betyg
columns_to_keep = ["L칛s친r", "Andel (%) elever som saknar godk칛nt betyg i ett, flera eller alla 칛mnen - Totalt", 
                   "Andel (%) elever som saknar godk칛nt betyg i ett, flera eller alla 칛mnen - Flickor", 
                   "Andel (%) elever som saknar godk칛nt betyg i ett, flera eller alla 칛mnen - Pojkar"]
df = df[columns_to_keep]

# Byter namn p친 kolumner
df.columns = ["L칛s친r", "Totalt", "Flickor", "Pojkar"]

# Filtrera f칬r att endast inkludera l칛s친ren 2018/19 till 2022/23
df = df[df["L칛s친r"].astype(str).str.contains("2018/19|2019/20|2020/21|2021/22|2022/23")]

# Skriver ut resultatet 
print(df)

# Skapar linjediagram med Plotly
fig = px.line(df, x="L칛s친r", y=["Totalt", "Flickor", "Pojkar"], 
              markers=True, title="Andel elever som saknar godk칛nt betyg per l칛s친r",
              labels={"value": "Andel elever (%)", "variable": "Grupp"})

# Spara figuren i visualiseringsmappen
os.makedirs("visualiseringar", exist_ok=True)  # Se till att mappen finns
fig.write_image("visualiseringar/andel_ej_godkant_betyg.png")

# Visa diagrammet
fig.show()